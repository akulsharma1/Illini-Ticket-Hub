// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Event {
    event_id Int @id @default(autoincrement())

    event_type    String
    away_team     String
    event_start   DateTime
    sales_enabled Boolean  @default(true)
    stadium_location String

    // all tickets for the event
    tickets Ticket[]

    asks Ask[]
    bids Bid[]

    transactions Transaction[]

    created_at DateTime @default(now()) @db.Timestamptz(6)
}

model Ticket {
    owner_id Int
    event_id Int

    // note: @relation in prisma is just a foreign key constraint
    owner Account @relation(fields: [owner_id], references: [account_id])
    event Event   @relation(fields: [event_id], references: [event_id])

    // used flag: set to true when it has been used
    used Boolean @default(false)

    listed Boolean @default(false)

    created_at DateTime @default(now()) @db.Timestamptz(6)

    @@id([owner_id, event_id])
}

model Account {
    // account login stuff
    account_id Int @id @default(autoincrement())
    email_address    String @unique
    password String
    name            String?

    tickets Ticket[] // Define the relationship to Ticket model

    asks Ask[]
    bids Bid[]

    // Transactions where the account is the buyer
    buyerTransactions Transaction[] @relation("BuyerTransactions")

    // Transactions where the account is the seller
    sellerTransactions Transaction[] @relation("SellerTransactions")

    created_at DateTime @default(now()) @db.Timestamptz(6)
}

model Ask {
    owner_id Int
    event_id Int

    account     Account     @relation(fields: [owner_id], references: [account_id])
    event Event @relation(fields: [event_id], references: [event_id])

    price Decimal

    created_at DateTime @default(now()) @db.Timestamptz(6)

    @@id([owner_id, event_id])
}

model Bid {
    owner_id Int
    event_id Int

    account     Account     @relation(fields: [owner_id], references: [account_id])
    event Event @relation(fields: [event_id], references: [event_id])

    price Decimal

    created_at DateTime @default(now()) @db.Timestamptz(6)

    @@id([owner_id, event_id])
}

model Transaction {
    buyer_id       Int
    seller_id      Int
    event_id       Int
    price          Decimal
    created_at DateTime @default(now()) @db.Timestamptz(6)

    buyer          Account @relation(name: "BuyerTransactions", fields: [buyer_id], references: [account_id])
    seller         Account @relation(name: "SellerTransactions", fields: [seller_id], references: [account_id])
    event          Event   @relation(fields: [event_id], references: [event_id])

    @@id([buyer_id, seller_id, created_at])
}